<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>D/Invoke on Jake Mai</title><link>https://jakemai0.github.io/tags/d/invoke/</link><description>Recent content in D/Invoke on Jake Mai</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><atom:link href="https://jakemai0.github.io/tags/d/invoke/index.xml" rel="self" type="application/rss+xml"/><item><title>Process Injection with D/Invoke - Part 1</title><link>https://jakemai0.github.io/posts/processinjection_0/</link><pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate><guid>https://jakemai0.github.io/posts/processinjection_0/</guid><description>Introduction In this blog post, I will be talking about writing your own injector in C#. Part 1 will mainly cover the use of D/Invoke and Early Bird process injection technique. In future posts, let&amp;rsquo;s improve our malware with PPID (Parent Process ID) Spoofing, protect our malware from EDRs with blockdlls, ACG (Arbitrary Code Guard), invoking system calls instead of API call, and more.
I won&amp;rsquo;t be drilling deep into each and everything mentioned, but some basic knowledge in programming, Windows internals and Windows API should help you understanding the content much better.</description></item></channel></rss>